{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onUserSelect","selectedUserId","className","length","map","todo","classNames","completed","htmlFor","id","type","checked","title","userId","onClick","BASE_URL","request","url","fetch","then","response","json","getAllTodos","CurrentUser","useState","user","setUser","useEffect","userFromServer","name","phone","email","website","App","setSelectedUserId","setTodos","a","todosFromAPI","fatchingTodos","ReactDOM","render","document","getElementById"],"mappings":"iVAYaA,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,eAAxB,OACvC,sBAAKC,UAAU,WAAf,UACE,wCACCH,EAAMI,OACL,qBAAKD,UAAU,2BAAf,SACE,oBAAIA,UAAU,iBAAd,SACGH,EAAMK,KAAI,SAAAC,GAAI,OACb,qBACEH,UAAWI,IACT,iBACA,CAAE,6BAA8BD,EAAKE,WACrC,CAAE,0BAA2BF,EAAKE,YAJtC,UAQE,wBAAOC,QAAO,UAAKH,EAAKI,IAAxB,UACE,uBACEP,UAAU,WACVQ,KAAK,WACLD,GAAE,UAAKJ,EAAKI,IACZE,QAASN,EAAKE,YAEhB,4BAAIF,EAAKO,WAEX,wBACEV,UAAWI,IACT,SACA,wBACA,CAAE,kCAAmCL,IAAmBI,EAAKQ,SAE/DH,KAAK,SACLI,QAAS,kBAAMd,EAAaK,EAAKQ,SAPnC,yBASYR,EAAKQ,YApBZR,EAAKI,WA0BhB,+CChDFM,EAAW,oCAEXC,EAAU,SAACC,GACf,OAAOC,MAAMD,GACVE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAGlBC,EAAc,WACzB,OAAON,EAAQ,GAAD,OAAID,EAAJ,YCFHQ,G,MAA+B,SAAC,GAAgB,IAAdV,EAAa,EAAbA,OAC7C,EAAwBW,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,qBAAU,WDEe,IAAClB,KCDZI,EDEPG,EAAQ,GAAD,OAAID,EAAJ,kBAAsBN,KCD/BU,MAAK,SAAAS,GAAc,OAAIF,EAAQE,QACjC,CAACf,IAGF,sBAAKX,UAAU,cAAf,UACE,oBAAIA,UAAU,qBAAd,yCACqBuB,QADrB,IACqBA,OADrB,EACqBA,EAAMhB,MAE3B,oBAAIP,UAAU,oBAAd,gBAAmCuB,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMI,OACzC,mBAAG3B,UAAU,qBAAb,gBAAmCuB,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMK,QACzC,mBAAG5B,UAAU,qBAAb,gBAAmCuB,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMM,QACzC,mBAAG7B,UAAU,uBAAb,gBAAqCuB,QAArC,IAAqCA,OAArC,EAAqCA,EAAMO,eC4BlCC,EA7CO,WACpB,MAA4CT,mBAAS,GAArD,mBAAOvB,EAAP,KAAuBiC,EAAvB,KACA,EAA0BV,mBAAiB,IAA3C,mBAAOzB,EAAP,KAAcoC,EAAd,KAYA,OAVAR,qBAAU,WAAM,4CACd,4BAAAS,EAAA,sEAC6Bd,IAD7B,OACQe,EADR,OAGEF,EAASE,GAHX,4CADc,uBAAC,WAAD,wBAOdC,MAIA,sBAAKpC,UAAU,MAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEH,MAAOA,EACPC,aAAckC,EACdjC,eAAgBA,MAGpB,qBAAKC,UAAU,eAAf,SACE,qBAAKA,UAAU,yBAAf,SACGD,EACC,qCACE,wBACES,KAAK,SACLR,UAAU,gBACVY,QAAS,WACPoB,EAAkB,IAJtB,mBASA,cAAC,EAAD,CAAarB,OAAQZ,OAErB,2BC3CdsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.25feb035.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  onUserSelect: (id: number) => void,\n  selectedUserId: number\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, onUserSelect, selectedUserId }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n    {todos.length ? (\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {todos.map(todo => (\n            <li\n              className={classNames(\n                'TodoList__item',\n                { 'TodoList__item--unchecked': !todo.completed },\n                { 'TodoList__item--checked': todo.completed },\n              )}\n              key={todo.id}\n            >\n              <label htmlFor={`${todo.id}`}>\n                <input\n                  className=\"checkbox\"\n                  type=\"checkbox\"\n                  id={`${todo.id}`}\n                  checked={todo.completed}\n                />\n                <p>{todo.title}</p>\n              </label>\n              <button\n                className={classNames(\n                  'button',\n                  'TodoList__user-button',\n                  { 'TodoList__user-button--selected': selectedUserId === todo.userId },\n                )}\n                type=\"button\"\n                onClick={() => onUserSelect(todo.userId)}\n              >\n                {`User #${todo.userId}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    ) : <p>Loading...</p> }\n  </div>\n);\n","import { Todo } from '../types/Todo';\nimport { User } from '../types/User';\n\nconst BASE_URL = 'https://mate.academy/students-api';\n\nconst request = (url: string) => {\n  return fetch(url)\n    .then(response => response.json());\n};\n\nexport const getAllTodos = (): Promise<Todo[]> => {\n  return request(`${BASE_URL}/todos`);\n};\n\nexport const getUserById = (id: number): Promise<User> => {\n  return request(`${BASE_URL}/users/${id}`);\n};\n","import React, { useEffect, useState } from 'react';\nimport { getUserById } from '../../api/api';\nimport { User } from '../../types/User';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number\n};\n\nexport const CurrentUser: React.FC<Props> = ({ userId }) => {\n  const [user, setUser] = useState<User | null>();\n\n  useEffect(() => {\n    getUserById(userId)\n      .then(userFromServer => setUser(userFromServer));\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        {`Selected user: ${user?.id}`}\n      </h2>\n      <h3 className=\"CurrentUser__name\">{user?.name}</h3>\n      <p className=\"CurrentUser__phone\">{user?.phone}</p>\n      <p className=\"CurrentUser__email\">{user?.email}</p>\n      <p className=\"CurrentUser__website\">{user?.website}</p>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { Todo } from './types/Todo';\nimport { getAllTodos } from './api/api';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    async function fatchingTodos() {\n      const todosFromAPI = await getAllTodos();\n\n      setTodos(todosFromAPI);\n    }\n\n    fatchingTodos();\n  });\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          onUserSelect={setSelectedUserId}\n          selectedUserId={selectedUserId}\n        />\n      </div>\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <>\n              <button\n                type=\"button\"\n                className=\"button__clear\"\n                onClick={() => {\n                  setSelectedUserId(0);\n                }}\n              >\n                Clear\n              </button>\n              <CurrentUser userId={selectedUserId} />\n            </>\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}